@model Mettal.Models.ViewModels.ProductSchemaViewModel

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="admin">
    <div class="container">
        <h2>
            @(Model == null || Model.Id == 0 ? "Добавление таблицы" : "Редактирование таблицы")
            <span class="btn-add-item">@Html.ActionLink("Список таблиц", "Index", null, new { @class = "btn btn-default" })</span>
        </h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>

            <div class="row table-name">
                <div class="form-group">
                    @Html.LabelFor(model => model.TableName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TableName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TableName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <table class="table table-striped table-hover table-edit">

                <thead>
                    <tr>
                        <th>Поле</th>
                        <th class="header">Заголовок столбца</th>
                        <th class="number">Номер</th>
                        <th class="showing">Отображать</th>
                    </tr>
                </thead>

                <tbody>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.NameTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.NameTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NameTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.NameOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NameOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.NameIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.PriceTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.PriceTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PriceTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.PriceOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PriceOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.PriceIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.SurfaceTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SurfaceTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SurfaceTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SurfaceOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SurfaceOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SurfaceIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.DescriptionTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DescriptionTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DescriptionTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DescriptionOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DescriptionOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DescriptionIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.LengthTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.LengthTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LengthTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.LengthOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LengthOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.LengthIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.WidthTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WidthTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WidthTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WidthOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WidthOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WidthIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.HeightTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.HeightTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HeightTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.HeightOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HeightOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.HeightIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.ThicknessTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.ThicknessTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ThicknessTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.ThicknessOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ThicknessOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.ThicknessIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.StenkaTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.StenkaTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StenkaTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.StenkaOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StenkaOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.StenkaIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.DiameterTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DiameterTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DiameterTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DiameterOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DiameterOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.DiameterIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.SechenieTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SechenieTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SechenieTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SechenieOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SechenieOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SechenieIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.WeightTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WeightTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WeightOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.WeightOneTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOneTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WeightOneTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOneOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WeightOneOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOneIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.WeightOneKgTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOneKgTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WeightOneKgTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOneKgOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WeightOneKgOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.WeightOneKgIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MarkTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MarkTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MarkTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MarkOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MarkOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MarkIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.GostTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.GostTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GostTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.GostOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GostOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.GostIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.TargetTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.TargetTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TargetTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.TargetOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TargetOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.TargetIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.CountryTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.CountryTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CountryTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.CountryOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CountryOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.CountryIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.CategoryTitle)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.CategoryTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CategoryTitle, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.CategoryOrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CategoryOrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.CategoryIsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Info1Title)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info1Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info1Title, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info1OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info1OrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info1IsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Info2Title)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info2Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info2Title, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info2OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info2OrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info2IsShow)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Info3Title)
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info3Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info3Title, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info3OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Info3OrderNumber, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Info3IsShow)
                        </td>
                    </tr>

                </tbody>

            </table>

            <div class="text-right">
                <input type="submit" value="Сохранить" class="btn btn-success" />
                @Html.ActionLink("Отмена", "Index", null, new { @class = "btn btn-default" })
            </div>
        }

    </div>
</div>


